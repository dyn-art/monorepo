[package]
name = "dyn_composition_api"
version = "0.0.1"
edition = "2021"
description = "SVG Composition"
homepage = "https://s.dyn.art/github"
repository = "https://github.com/dyndotart/monorepo"
license = "AGPL-3.0-or-later"
authors = ["@bennoinbeta"]

[lib]
name = "dyn_composition_api"
path = "src/lib.rs"
crate-type = ["cdylib", "rlib"]

[[bin]]
name = "cli"
path = "src/bin.rs"

[features]
default = []
console_log = ["dep:console_error_panic_hook", "dep:once_cell"]
tracing = ["console_log", "dyn_composition/tracing"]
cli = ["dep:clap", "specta/export"]

[dependencies]

# Core dependencies
dyn_composition = { path = "../../../crates/composition", features = [
    "interactive",
] }
dyn_svg_render = { path = "../../../crates/svg_render" }
dyn_bevy_render_skeleton = { path = "../../../crates/bevy_render_skeleton" }
bevy_ecs = "0.12"
bevy_app = "0.12"
specta = { version = "2.0.0-rc.7", features = [
    "typescript",
    "serde",
    "glam",
    "bevy_ecs",
    "functions",
] }
serde = { version = "1.0.189", features = ["derive"] }

# Logging
log = "0.4.20"
once_cell = { version = "1.18.0", optional = true }

# Bindgen dependencies
wasm-bindgen = "0.2.87"
# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.7", optional = true }
js-sys = "0.3.65"
serde_json = "1.0.107"
serde-wasm-bindgen = "0.6.1"

# CLI dependencies
clap = { version = "4.4.6", features = ["derive"], optional = true }

[dev-dependencies]
wasm-bindgen-test = "0.3.37"

[profile.release]
opt-level = "s"
lto = true

[profile.dev.package."*"]
opt-level = 3
