/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
	'/v1/auth/etsy/ping': {
		/**
		 * Etsy Ping
		 * @description Ping Etsy API.
		 */
		get: operations['getPing'];
	};
	'/v1/auth/etsy/oauth/challenge': {
		/**
		 * Get OAuth Challenge
		 * @description Retrieve a PKCE Code Challenge.
		 */
		get: operations['getOAuthChallenge'];
	};
	'/v1/auth/etsy/oauth/redirect': {
		/**
		 * Handle OAuth Redirect
		 * @description Handle the redirect from Etsy after user authorization, and retrieve the access token.
		 */
		get: operations['handleOAuthRedirect'];
	};
	'/v1/media/pre-signed-upload-url': {
		/**
		 * Get Pre-Signed Upload URL
		 * @description Get a pre-signed URL for uploading files.
		 */
		get: operations['getPreSignedUploadUrl'];
	};
	'/v1/media/pre-signed-download-url/{key}': {
		/**
		 * Get Pre-Signed Download URL
		 * @description Get a pre-signed URL for downloading files.
		 */
		get: operations['getPreSignedDownloadUrl'];
	};
	'/v1/ping': {
		/**
		 * API Ping
		 * @description Ping the API to check if it's working.
		 */
		get: operations['getPingAPI'];
		/**
		 * API Ping
		 * @description Ping the API to check if it's working.
		 */
		post: operations['postPingAPI'];
	};
}

export type webhooks = Record<string, never>;

export interface components {
	schemas: {
		/**
		 * @description Error Response
		 * @example {
		 *   "error_code": "400",
		 *   "error_description": "Bad Request",
		 *   "error_uri": null,
		 *   "additional_errors": []
		 * }
		 */
		ServerError: {
			/** @description Error code */
			error_code?: string;
			/** @description Error description */
			error_description?: string | null;
			/** @description Error URI */
			error_uri?: string | null;
			additional_errors?: Record<string, never>[];
		};
	};
	responses: {
		/** @description Bad Request */
		BadRequest: {
			content: {
				'application/json': components['schemas']['ServerError'];
			};
		};
		/** @description Server Error */
		ServerError: {
			content: {
				'application/json': components['schemas']['ServerError'];
			};
		};
		/** @description Not Found */
		NotFound: {
			content: {
				'application/json': components['schemas']['ServerError'];
			};
		};
	};
	parameters: never;
	requestBodies: never;
	headers: never;
	pathItems: never;
}

export type external = Record<string, never>;

export interface operations {
	/**
	 * Etsy Ping
	 * @description Ping Etsy API.
	 */
	getPing: {
		responses: {
			/** @description Success */
			200: {
				content: {
					'application/json': boolean;
				};
			};
		};
	};
	/**
	 * Get OAuth Challenge
	 * @description Retrieve a PKCE Code Challenge.
	 */
	getOAuthChallenge: {
		responses: {
			/** @description Success */
			200: {
				content: {
					'application/json': {
						challenge: string;
					};
				};
			};
			500: components['responses']['ServerError'];
		};
	};
	/**
	 * Handle OAuth Redirect
	 * @description Handle the redirect from Etsy after user authorization, and retrieve the access token.
	 */
	handleOAuthRedirect: {
		parameters: {
			query?: {
				code?: string;
				state?: string;
				error?: string;
				error_description?: string;
			};
		};
		responses: {
			/** @description Success */
			200: {
				content: {
					'application/json': {
						access_token: string;
						refresh_token: string;
						refresh_token_expires_at: number;
					};
				};
			};
			400: components['responses']['BadRequest'];
			500: components['responses']['ServerError'];
		};
	};
	/**
	 * Get Pre-Signed Upload URL
	 * @description Get a pre-signed URL for uploading files.
	 */
	getPreSignedUploadUrl: {
		parameters: {
			query?: {
				content_type?: string;
				key?: string;
				scope?: string;
				overwrite?: boolean;
			};
		};
		responses: {
			/** @description Success */
			200: {
				content: {
					'application/json': {
						upload_url: string;
						key: string;
					};
				};
			};
		};
	};
	/**
	 * Get Pre-Signed Download URL
	 * @description Get a pre-signed URL for downloading files.
	 */
	getPreSignedDownloadUrl: {
		parameters: {
			path: {
				key: string;
			};
		};
		responses: {
			/** @description Success */
			200: {
				content: {
					'application/json': {
						download_url?: string;
						key?: string;
					};
				};
			};
			404: components['responses']['NotFound'];
		};
	};
	/**
	 * API Ping
	 * @description Ping the API to check if it's working.
	 */
	getPingAPI: {
		responses: {
			/** @description Success */
			200: {
				content: {
					'application/json': boolean;
				};
			};
		};
	};
	/**
	 * API Ping
	 * @description Ping the API to check if it's working.
	 */
	postPingAPI: {
		parameters: {
			path?: {
				/** @description The unique positive non-zero numeric ID for an Etsy Shop. */
				shop_id: number;
			};
			query: {
				/** @description The unique positive non-zero numeric ID for an Etsy Shop. */
				test123: number;
			};
		};
		/** @description Request body */
		requestBody?: {
			content: {
				/**
				 * @example {
				 *   "hello": "Jeff"
				 * }
				 */
				'application/json': {
					hello: string;
					jeff?: number;
				};
			};
		};
		responses: {
			/** @description Success */
			200: {
				content: {
					'application/json': string;
				};
			};
		};
	};
}
