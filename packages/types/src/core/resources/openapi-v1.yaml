openapi: 3.0.3
info:
  title: dyn.art core service
  version: 0.0.1
servers:
  - url: https://api.dyn.art
    description: Production server
tags:
  - name: info
    description: Endpoints to retrieve general information about the service e.g. its health status
  - name: user
    description: Endpoints related to the user entity

paths:
  /v1/health:
    get:
      tags:
        - info
      summary: Check health
      description: ''
      operationId: checkHealth
      responses:
        '200':
          description: Server is up and running
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthDto'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppErrorDto'

  /v1/user/register:
    post:
      tags:
        - user
      summary: Register user
      description: ''
      operationId: registerUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterUserDto'
      responses:
        '200':
          description: Successful operation
        '409':
          description: Email address already registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppErrorDto'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppErrorDto'
  /v1/user/login:
    get:
      tags:
        - user
      summary: Log user in
      description: ''
      operationId: loginUser
      parameters:
        - name: email
          in: query
          description: The email for login
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: The password for login in clear text
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          headers:
            X-Rate-Limit:
              description: Calls per hour allowed by the user
              schema:
                type: integer
                format: int32
            X-Expires-After:
              description: Date in UTC when token expires
              schema:
                type: string
                format: date-time
          content:
            application/xml:
              schema:
                type: string
            application/json:
              schema:
                type: string
        '400':
          description: Invalid username/email/password supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppErrorDto'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppErrorDto'
  /v1/user/logout:
    get:
      tags:
        - user
      summary: Log out current logged in user session
      description: ''
      operationId: logoutUser
      parameters: []
      responses:
        '200':
          description: Successful operation
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppErrorDto'

components:
  schemas:
    AppErrorDto:
      type: object
      required:
        - error_code
        - error_description
        - error_uri
        - additional_errors
      description: Application error
      properties:
        error_code:
          type: string
          description: Error code
        error_description:
          type: string
          description: Error description
          nullable: true
        error_uri:
          type: string
          description: Error URI
          nullable: true
        additional_errors:
          type: array
          items:
            type: object
      example:
        error_code: "400"
        error_description: "Bad Request"
        error_uri: null
        additional_errors: []

    HealthDto:
      type: object
      required:
        - status
        - message
      properties:
        message:
          type: string
        status:
          $ref: '#/components/schemas/HealthStatus'
    HealthStatus:
      type: string
      enum:
        - Up
        - Restricted
        - Down
      example: Up

    RegisterUserDto:
      type: object
      required:
        - email
        - username
        - password
      properties:
        email:
          type: string
          description: The email for the registeration
        username:
          type: string
          description: The user name for the registeration
        password: 
          type: string
          description: The password for the registeration in clear text

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
